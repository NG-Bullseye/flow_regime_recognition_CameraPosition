import numpy as np

def compute_center_of_gravity(image_matrix_str):
    # Remove the outer brackets and then split the rows by newline characters
    rows = image_matrix_str.strip()[2:-2].split(']\n [')

    # Convert each row to a list of integers
    image_matrix = np.array([list(map(int, row.split())) for row in rows])

    # Normalize the image matrix using min-max normalization
    min_value = np.min(image_matrix)
    max_value = np.max(image_matrix)
    image_matrix = (image_matrix - min_value) / (max_value - min_value)

    # Get the shape of the matrix
    height, width = image_matrix.shape

    # Compute the weights for the x and y coordinates
    weights_x = np.sum(image_matrix, axis=0)
    weights_y = np.sum(image_matrix, axis=1)

    # Compute the average x and y coordinates using the weights
    avg_x = np.average(np.arange(width), weights=weights_x)
    avg_y = np.average(np.arange(height), weights=weights_y)

    return avg_x, avg_y

# Test the function
image_matrix_str = """[[164 164 164 163 162 161 160 159 157 156 155 154 154 153 153 153 154 154 155 156 157 157 159 159 161 162 162 162]
 [164 164 164 163 162 161 160 159 157 156 155 154 154 153 153 153 154 154 155 156 157 157 159 159 161 162 162 162]
 [164 164 164 163 162 161 159 158 157 155 154 154 153 153 153 153 153 153 154 155 156 157 158 159 160 161 162 162]
 [163 163 163 162 161 159 158 157 155 154 153 153 152 151 151 151 152 152 153 153 155 156 157 158 159 160 161 161]
 [163 163 162 161 160 159 157 156 154 153 152 151 151 150 150 150 150 150 151 152 153 154 156 157 158 159 160 160]
 [162 162 162 160 159 157 156 154 153 152 151 150 149 149 149 149 149 149 149 151 152 153 154 156 157 159 159 159]
 [162 162 161 159 158 156 155 153 152 150 149 149 148 147 147 147 147 147 147 149 150 152 153 155 156 158 159 159]
 [162 162 161 159 157 156 154 153 151 149 147 147 146 145 145 145 145 145 146 147 149 151 152 154 155 157 158 158]
 [162 162 161 159 157 155 153 152 149 147 146 145 144 144 143 143 143 144 145 146 148 149 151 153 155 156 157 157]
 [161 161 160 159 157 155 153 150 149 146 145 144 143 142 141 142 142 142 143 145 147 149 150 152 154 156 157 157]
 [161 161 160 158 156 154 152 149 147 145 143 142 140 140 139 140 140 140 140 143 145 147 149 151 153 155 156 156]
 [161 161 160 157 155 153 151 148 146 143 142 140 139 138 137 137 137 137 139 140 143 145 147 149 152 154 155 155]
 [161 161 159 157 154 152 150 147 145 142 140 139 137 136 135 135 135 135 136 139 141 143 146 148 151 153 154 154]
 [160 160 159 157 154 151 149 146 143 140 139 137 136 134 133 133 133 133 134 136 139 142 144 147 149 152 153 153]
 [160 160 159 156 153 150 147 145 142 139 137 135 134 132 132 131 131 131 132 135 137 140 143 146 148 151 152 152]
 [160 160 158 155 152 149 146 143 140 137 135 133 132 130 130 129 129 129 130 133 136 139 142 144 147 150 151 151]
 [159 159 158 155 152 149 145 142 139 135 133 132 130 128 127 127 127 127 129 132 135 137 140 143 146 149 150 150]
 [159 159 157 154 151 147 144 140 137 133 131 129 128 126 126 125 125 125 127 130 133 136 139 142 145 147 149 149]
 [159 159 157 154 150 147 143 140 136 132 130 128 127 125 125 124 124 124 125 129 132 135 138 140 144 147 149 149]
 [158 158 157 153 150 147 143 139 135 132 129 127 126 125 124 123 123 123 125 127 131 134 137 140 143 147 148 148]
 [158 158 156 153 150 147 143 139 135 131 128 127 125 124 123 123 123 122 123 127 130 134 137 140 143 146 147 147]
 [157 157 156 153 150 147 143 139 134 130 127 126 125 124 123 122 122 121 123 126 129 133 136 139 142 146 147 147]
 [157 157 156 153 150 147 143 139 134 130 127 126 125 123 123 122 122 121 122 126 129 132 136 139 142 146 147 147]
 [158 158 156 153 150 147 143 139 135 131 128 127 125 124 123 123 122 122 123 126 129 132 136 139 143 146 148 148]
 [158 158 157 153 150 147 144 140 136 132 129 127 126 124 123 123 123 122 123 126 130 133 136 140 143 147 149 149]
 [159 159 157 154 151 147 144 140 136 132 129 127 126 125 123 123 123 123 124 127 130 133 136 140 144 147 150 150]
 [159 159 157 154 151 147 144 140 136 132 130 128 126 125 124 123 123 123 124 127 130 133 136 140 144 148 150 150]
 [159 159 157 154 151 147 144 140 136 132 130 128 126 125 124 123 123 123 124 127 130 133 136 140 144 148 150 150]]""" # Use the complete matrix string here

x, y = compute_center_of_gravity(image_matrix_str)
print(f"Center of gravity (original coordinates): x = {x:.2f}, y = {y:.2f}")
